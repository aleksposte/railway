15 Добавить возможность указать порядковый номер станции в маршруте (поле для сортировки). Учесть, что одна и та же станция может входить в разные маршруты и иметь разный порядковый номер в разных маршрутах. Пока установку порядкового номера сделать без веб-интерфейса, можно это делать через rails-консоль.
Выводить список станций в маршруте по порядковому номеру (использовать скоуп для сортировки)
Реализовать через STI следующие типы вагонов:
       - Купейный (имеет верхние и нижние места)
       - Плацкартный (имеет верхние/нижние места + боковые верхние и нижние)
       - СВ (имеет только нижние места)
       - Сидячий (имеет только сидячие места)
При добавлении вагона к поезду, автоматически назначать вагону порядковый номер (использовать коллбеки).

Проверять уникальность номера вагона у поезда. Не может быть ситуации, когда у поезда 2 вагона с номером 11, например.

На странице просмотра поезда выводить список номеров вагонов (как ссылки). При переходе по ссылке на конкретный вагон показывать тип вагона и актуальную информацию по нему (кол-во верхних/нижних мест, если есть - боковые и т.п. в зависимости от типа вагона)

У поезда сделать флаг (поле в таблице типа boolean) - сортировка вагона. Значения: с головы/c хвоста поезда. Если выбран вариант “с головы поезда”, то вагоны на странице поезда выводятся в прямом порядке, если “с хвоста поезда” - в обратном.
Усложненное задание: используя AR Query Interface, реализовать метод в модели Train, который принимает в качестве аргумента тип вагона и тип мест (вернхние/нижние/cидячие) и вовзращает их общее кол-во для поезда (т.е. считает по всем вагонам указанного типа).

Примечание: в скринкасте допущена ошибка, в модели Route метод set_name должен использовать простое присвоение (=), а не "или-равно" (||=). Т.е. правильный код такой:  
def set_name
    self.name = "#{railway_stations.first.title} - #{railway_stations.last.title}"
end
 

В качестве ответа на задание приложить ссылку на пулл-реквест с решением
